include ../dist/gum

doctype html
html(lang="en")
  head
    title="Gum+ Test"
    style(type='text/css').
      .ok:after {
        color: green;
        content: "..✔ Ok";
      }
      .fail:after {
        color: red;
        content: "..✘ Failed";
      }
      em {
        color: blue;
      }
  body
    h2 Summary
    p.
      Gum lets you write PHP with Jade. While not intended as a PHP replacement
      of any kind, Gum should offer a funky approach to most basic PHP tasks.

    h2 Samples
    ul
      - var test = "Should declare and initialize variables."

      +-(variable=42)

      +if ($.variable)
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should compare variables against values."

      +-(meat="beef" quality=10)

      +if ($.meat.is.equal.to("beef").and.quality.is.equal.to(10))
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should handle > and < comparisons."

      +-(budget=2000)

      +if ($.budget.is.greater.than._(1000).and.budget.is.less.than._(3000))
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should compare variables against other variables."

      +-(lastYearBudget=1500 nextYearBudget=2000)

      +if ($.budget.is.greater.than.lastYearBudget)
        +if ($.budget.equals.nextYearBudget)
          li.ok= test
        +else
          li.fail=test
        +fi
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Basic Arithmetic. Should calculate Earth's mass."
      //- F = GmM/r^2 = ma → GM/r^2 = a → M = ar^2/G
      +-(acceleration = 9.8
         radius       = $._(6.4 * 6.4).e(12)
         BigG         = $._(6.67).e(-11)
        )
      +-(massOfEarth= $.acceleration.times.radius.by.BigG)

      +if ($.massOfEarth.is.greater.or.equal.to(6).e(24))
        li.ok= test
        li: ul: li.ok: +echo($.massOfEarth)
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should concatenate strings."

      +-(firstString="spider" secondString="man")
      +if ($.firstString.cat.secondString.is.equal.to("spiderman"))
        +-(concatString = $.firstString.cat.secondString)
        +if($.concatString.is.equal.to("spiderman"))
          li.ok= test
        +else
          li.fail=test
        +fi
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should use the mod % operator to check if a number is even/odd."

      +-(oddNumber = 3)
      +if ($.oddNumber.mod._(2).is.equal.to(0))
        li.fail=test
      +else
        +if ($.oddNumber.mod._(3).is.equal.to(0))
          li.ok= test
        +else
          li.fail=test
        +fi
      +fi
      //------------------------------------------------------------------------
      - test = "Should access the item at index 3 of an array"

      +-(progLanguages=["C", "Go", "Python", "JavaScript"])

      +if ($.progLanguages.at(3).is.equal.to("JavaScript"))
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should run the default case in a switch."
      +-($.progLanguages.at(0).set.to("Scala"))
      +switch ($.progLanguages.at(0))
        +case ("C")
          li.fail=test
        +case ("Go")
          li.fail=test
        +case ("Python")
          li.fail=test
        +case ("JavaScript")
          li.fail=test
        +else
          li.ok= test
      //------------------------------------------------------------------------
      - test = "Should run an else clause inside a switch."
      +-(country = "Japan" lang = "Japanese")
      +switch ($.country)
        +case ("Japan")
          +if ($.lang.is.not.equal.to("Japanese"))
            li.fail=test
          +else
            li.ok= test
          +fi
        +else
          li.fail=test
      //-----------------------------------------------------------------------
      - test = "Should print each element in an array with a for loop."

      - $("count")
      - $("array_push")

      +-(languages=["English", "日本語", "ελληνικά", "Español"] ok=false)

      //- - console.log($.count().toString())

      li
        em= test
        ul
          +for(idx=0 to=4)
            +-($.ok.set.to(true))
            li.ok: +echo($.languages.at($.idx))
        +if($.ok)
          li.ok= test
        +else
          li.fail= test
        +fi
      //-----------------------------------------------------------------------
      - test = "Should used 2 nested for loops to compute all prime numbers until 100."

      +-(shouldBePrimes = []
         primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,
                   43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])

      li
        em= test
        ul
          +for(i=2 to=100)
            +for(j=2 to="$i/$j")
              +if($.no($.i.mod.j))
                +break
              +fi

            +if($.j.is.greater.than.i.by.j)
              +echo(" ", $.i)
              +-($.array_push($.shouldBePrimes, $.i))
            +fi

          +if($.count($.primes).is.count($.shouldBePrimes))
            br
            +for(i=0 to=$.count($.primes))
              +if($.primes.at($.i).is.shouldBePrimes.at($.i))
                b: +echo(" ", $.shouldBePrimes.at($.i))
              +else
                li.fail=test
                +break
              +fi
          +else
            li.fail=test
          +fi
        +if($.i.is.count($.primes))
          li.ok=test
        +else
          li.fail=test
        +fi
      //------------------------------------------------------------------------
      - test = "Should print each element in an array with a for each loop."

      li
        em= test
        ul
          +each(in=$.languages lang)
            li.ok: +echo($.lang)
      //------------------------------------------------------------------------
      - test = "Should loop an array and echo a message for each element with a switch."

      +-(gods=["Zeus", "Poseidon", "Hades", "Athena", "Joe"])

      li
        em= test
        ul
          +each(in=$.gods god)
            +switch ($.god)
              +case ("Zeus")
                li.ok: +echo($.god.cat.to(": God of Thunder."))
              +case ("Poseidon")
                li.ok: +echo($.god.cat.to(": God of the Sea."))
              +case ("Hades")
                li.ok: +echo($.god.cat.to(": Goddess of Wisdom."))
              +case ("Athena")
                li.ok: +echo($.god.cat.to(": God of the Underworld."))
              +else
                li.ok: +echo("<b>", $.god, "</b>", ": is not in my list.")
      //------------------------------------------------------------------------
      - test = "Should test using the not operator at the beginning of a chain."
      +if ($.not.false)
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should test double negation."
      +if ($.not.not.true)
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should handle nested ifs."
      +-(fridayThe13thSequels=1)
      +if ($.fridayThe13thSequels.is.equal.to(1))

        +-($.let.fridayThe13thSequels.be(2))
        +if ($.fridayThe13thSequels.is.equal.to(2))

          +-($.let.fridayThe13thSequels.be(5))
          +if ($.fridayThe13thSequels.is.equal.to(5))

            +-($.let.fridayThe13thSequels.be(12))
            +if ($.fridayThe13thSequels.is.equal.to(12))

              +-($.let.fridayThe13thSequels.inc)
              +if ($.fridayThe13thSequels.is.less.than._(14))

                li.ok= test
              +else
                li.fail=test
              +fi
            +else
              li.fail=test
            +fi
          +else
            li.fail=test
          +fi
        +else
          li.fail=test
        +fi
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should handle increment ++."
      +-(languageC=11)
      +-($.let.languageC.inc)
      +if ($.languageC.is.less.than._(14))
        +-($.let.languageC.inc)
        +if ($.languageC.is.less.than._(14))
          +-($.let.languageC.inc)
          +if ($.languageC.is.less.than._(14))
            li.fail=test
          +else
            li.ok= test
          +fi
        +else
          li.fail=test
        +fi
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should handle descrement --."
      +-($.let.languageC.dec)
      +if ($.languageC.is.less.than._(14))
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should handle is.null."

      +-(ie6 = null)
      +if ($.ie6.is.null)
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should do a while loop."

      +-(chances=0)
      li= test
        ul
          +while($.chances.are.less.than._(3))
            li.ok: +echo('Chance #', $.chances.inc)

      +if ($.chances.are.equal.to(3))
        li.ok= test
      +else
        li.fail=test
      +fi
      //------------------------------------------------------------------------
      - test = "Should create a dictionary and check items at different keys."
      +-(profile={firstName:"Jorge",
                  lastName:"Bucaran",
                  age:29,
                  city:"Tokyo",
                  snack:"Almonds"})

      +if ($.profile.at("age").is.equal.to(29).and.
             profile.at("snack").is.equal.to("Almonds"))

        +if ($.profile.at("firstName").is.equal.to("Jorge").and.
               profile.at("lastName").is.equal.to("Bucaran"))
          li.ok= test
        +else
          li.fail=test
        +fi
      +else
        li.fail=test
      +fi

      //------------------------------------------------------------------------
      - test = "Should loop and echo all keys and values in a dictionary."
      - $('ucwords')

      li
        em= test
        ul
          +each(in=$.profile key value)
            li: +echo($.ucwords($.key)," : ",$.value)
          li.ok= test
      //------------------------------------------------------------------------
    - test = "Should create a function and call it."

    +-(function='greet' english spanish="Hola!" japanese="こんにちは！")
      +if($.english.is.empty)
        +-($.english.set.to("Hi!"))
      +fi
      +return($.english.cat.spanish.cat.japanese)

    +-(oneResult = $.greet("Howdy", "Epa!", "よっ")
       anotherResult = $.greet("Howdy", "Epa!", "よっ"))
    +if($.oneResult.is.anotherResult)
      li.ok= test
    +else
      li.fail= test
    +fi
      //------------------------------------------------------------------------
      - test = "Should create an object with nested arrays and print it."

      li
        em= test
        ul
          +-(scoreTable={Giants:[13,22,18],
                         Bolts:[20,19,11],
                         Stars:[23,14,20]}
             ok = true)

          +each(in=$.scoreTable team scores)
            li
              +if($.team.is.equal.to("Giants").or.
                    team.is.equal.to("Bolts").or.
                    team.is.equal.to("Stars"))

                +echo($.team)

                +for(i=0 to=$.count($.scores))
                  +if($.team.is.equal.to("Giants"))
                    +if($.scores.is.not.equal.to([13,22,18]))
                      span.fail
                      +-($.ok.set.to(false))
                      +break
                    +fi
                  +fi
                  +if($.team.is.equal.to("Bolts"))
                    +if($.scores.is.not.equal.to([20,19,11]))
                      span.fail
                      +-($.ok.set.to(false))
                      +break
                    +fi
                  +fi
                  +if($.team.is.equal.to("Stars"))
                    +if($.scores.is.not.equal.to([23,14,20]))
                      span.fail
                      +-($.ok.set.to(false))
                      +break
                    +fi
                  +fi
                  +echo(" ", $.scores.at($.i))
              +else
                +-($.ok.set.to(false))
                span.fail= test
              +fi
          +if($.ok)
            li.ok= test
          +else
            li.fail= test
          +fi



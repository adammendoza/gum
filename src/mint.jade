//-**
   *
   *  gum/mint.jade
   *
   *  PHP Mixin Library for Jade.
   *
   */
include gum.jade
//-**
   *
   *  Echoes the block inside <?php ?> tags.
   *
   *  @before text to prepend to the php code inside <?php?>.
   *  @after  text to append to the php code inside <?php?>.
   *  @block  php code to render inside <?php?>.
   *
   *  @since 0.0.1
   *
   */
mixin -(before, after)
  - before = before || ''
  - after = after || ';'
  !='<?php ' + before + ' '
  block
  != after + ' ?>'
//-**
   *
   *  Alias for +- mixin.
   *
   *  @since 0.0.1
   *
   */
mixin php(before, after)
  +-(before, after)
    block
//-**
   *
   *  Echoes the block inside comment tags.
   *
   *  @block of comments to echo.
   *
   *  @since 0.0.1
   *
   */
mixin --
  +-
    |/*
    block
    |*/
//-**
   *
   *  Wrapper for mixin --. See above.
   *
   *  @block of comments to echo.
   *
   *  @since 0.0.1
   *
   */
mixin comment
  +--
    block
//-**
   *
   *  Wrapper for PHP echo statement.
   *
   *  @block of php to echo.
   *
   *  @since 0.0.1
   *
   */
mixin echo
  +-
    ='echo '
    block
//-**
   *
   *  Wrapper for PHP die function. die is a function so we pass );
   *  to mixin - and then the block.
   *
   *  @block of text to die.
   *
   *  @since 0.0.1
   *
   */
mixin die
  +-('(', ');')
    ='die'
    block
//-**
   *
   *  Echoes PHP if statements with support for elseif.
   *
   *  @condition  to echo inside php tags.
   *  @elseif     true if the statement is an else if.
   *
   *  @since 0.0.1
   *
   */
mixin _if(condition, elseif)
  +-(elseif ? 'elseif(' : 'if(' + condition, ') :')
    block
//-**
   *
   *  PHP if statement.
   *
   *  @condition to echo inside php tags.
   *
   *  @since 0.0.1
   *
   */
mixin if(condition)
  +_if (condition)
  block
//-**
   *
   *  PHP elseif statement.
   *
   *  @condition to echo inside php tags.
   *
   *  @since 0.0.1
   *
   */
mixin elseif(condition)
  +_if (condition, /*elseif*/true)
  block
//-**
   *
   *  PHP else statement.
   *
   *  @since 0.0.1
   *
   */
mixin else
  +-('else', ':')
  block
//-**
   *
   *  PHP endif statement.
   *
   *  @since 0.0.1
   *
   */
mixin endif
  block
  +- endif
//-**
   *
   *  Alias for +endif mixin.
   *
   *  @since 0.0.1
   *
   */
mixin fi
  +endif
//-**
   *
   *  Wrapper for PHP if !statement.
   *
   *  @condition to echo inside php tags.
   *
   *  @since 0.0.1
   *
   */
mixin unless(condition)
  +if('!' + condition)
  block
//-**
   *
   *  PHP while loop.
   *
   *  @condition to echo inside php tags.
   *
   *  @since 0.0.1
   *
   */
mixin while(condition)
  +-('while('+ condition, '):')
  block
  +- endwhile
//-**
   *
   *  Repeats the block $times times.
   *
   *  @times to repeat the block.
   *
   *  @since 0.0.1
   *
   */
mixin repeat(times)
  - var i = 0
  while i++ < times
    block
//-**
   *
   *  A yet block is described below.
   *
   *    {name} = {$}
   *    if ({name}) {
   *      block
   *    }
   *
   *  @callback name of a function that returns some data.
   *  @name of the variable to set to the data.
   *
   *  @since 0.0.1
   *
   */
mixin yet(callback,data)
  - data = data || '$data';
  +- #{data} = #{callback}
  +if(data)
    block
    +- unset(#{data})
  +endif
//-**
   *
   *  Generates an if statement that echoes the contents of the block
   *  if !== null wrapped in markup optionally. Notice we are echoing
   *  a block instead of a string argument, as the condition of the
   *  generated if statement. This allows extra markup to be passed
   *  in to maybe, however we can't use the regular +if mixin.
   *
   *  @block php to echo inside if clause and if statement.
   *  @markup to generate inside the echo statement
   *
   *  @since 0.0.1
   */
mixin maybe(markup)
  +-('if(', '):')
    block
  - markup = $.tag(markup)
  #{markup.name}(id=markup.id class=markup.class)
    +echo
      block
  +endif
//-**
   *
   *  Echoes the block inside conditional IE<ve>
   *  comments.
   *
   *  @version number to attach to the IE conditional.
   *
   *  @since 0.0.1
   *
   */
mixin if_ie(version, condition)
  - condition = condition || ''
  !='<!--[if '+ condition +' IE '+version+']>'
  block
  !='<![endif]-->'
//-**
   *
   *  Echoes the block inside conditional lt IE<ver>
   *  comments.
   *
   *  @version number to attach to the IE conditional.
   *
   *  @since 0.0.1
   *
   */
mixin if_lt_ie(version)
  +if_ie(version, 'lt')
//-**
   *
   *  Echoes the block inside conditional gt IE<ver>
   *  comments.
   *
   *  @version number to attach to the IE conditional.
   *
   *  @since 0.0.1
   *
   */
mixin if_gt_ie(version)
  +if_ie(version, 'gt')
//-**
   *
   *  Echoes IE<ver> conditional comments for the
   *  HTML element.
   *
   *  @version number to attach to the IE conditional.
   *
   *  @since 0.0.1
   *
   */
mixin html_ie(version)
  !='<!--[if IE '+version+']><html'
  if attributes.php
    !=' <?php '+attributes.php+'; ?>'
  //- Wraps the value in <?php ?> tags

  if attributes.lang
    !=' lang='+attributes.lang
  //- Specifies the language of the element's content.

  if attributes.class
    !=' class="'+attributes.class+'"'
  //- Specifies one or more classnames for the element.

  if attributes.id
    !=' id="'+attributes.id+'"'
  //- Specifies a unique id for the element.

  if attributes.xmlns
    !=' xmlns="'+attributes.xmlns+'"'
  //- Specifies the XML namespace attribute.

  !='>'
  !='<![endif]-->'
//-**
   *
   *  Echoes teh html5shiv hack.
   *
   *  @link to the html5 script.
   *
   *  @since 0.0.1
   *
   */
mixin html5shiv(link)
  - link = link || 'http://html5shiv.googlecode.com/svn/trunk/html5.js'
  +if_lt_ie(9)
    !='<script src="' + link + '"></script>'
  !='<!--[if lt IE 9]><script src="' + link + '"></script><![endif]-->'
